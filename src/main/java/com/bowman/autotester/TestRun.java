package com.bowman.autotester;

/**********************************
           imports
 **********************************/

import java.lang.String;
import java.lang.StringBuilder;
import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.OneToOne;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
* Test run entity
* 
* @author  Petr Rasek
* @version 1.0
* @since   2014-11-05 
*/ 

@Entity
@Table(name = "TEST_RUN")
@SequenceGenerator(name = "TEST_RUN_SEQ", allocationSize = 1)
@NamedQueries({
    @NamedQuery(name = "getTestCaseRuns",
                query = "SELECT a FROM TestRun a WHERE a.testCase.iID = :test_case_id " +
                        "ORDER BY a.runDate DESC"),
})
public class TestRun {   
    
    /**********************************
              attributes
    **********************************/ 
    
    @Id 
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "TEST_RUN_SEQ")
    @Column(name = "ID")
    private int iID;    
    
    @OneToOne
    @JoinColumn(name = "TEST_CASE_FK", nullable = false)
    private TestCase testCase;
    
    @Column(name = "STATUS", nullable = false, length = 10)
    private String sStatus; 
    
    @Column(name = "ENVIRONMENT", nullable = false, length = 10)
    private String sEnvironment;     
    
    @Column(name = "RUN_DATE", nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date runDate;
    
    @Column(name = "DURATION")
    private long lDuration;
    
    @Column(name = "NOTE", length = 400)
    private String sNote;
    
    /**********************************
              constructors
    **********************************/ 
    
    public TestRun() {
        
        this.iID = -1;
        this.testCase = null;
        this.sStatus = null;
        this.sEnvironment = null;
        this.runDate = null;
        this.lDuration = -1;
        this.sNote = null;
        
    }
    
    /**    
    * table TEST_RUN
    * column ID - integer, primary key, autogenerated
    * query - getTestCaseRuns
    * @param testCase TEST_CASE_FK - integer, foreign key to TEST_CASE.ID, not null
    * @param sStatus STATUS - varchar, not null
    * @param sEnvironment ENVIRONMENT - varchar, not null
    * @param runDate RUN_DATE - date
    * @param lDuration DURATION - integer
    * @param sNote NOTE - varchar
    * */     
    public TestRun(TestCase testCase, String sStatus, String sEnvironment, Date runDate, long lDuration, String sNote) {
        
        this.testCase = testCase;
        this.sStatus = sStatus;
        this.sEnvironment = sEnvironment;
        this.runDate = runDate;
        this.lDuration = lDuration;
        this.sNote = sNote;
        
    }
    
    /**********************************
              getters, setters
    **********************************/ 
    
    /**
    * @return int 
    */
    public int getID() {
        
        return this.iID;
        
    }
    
    /**  
    * @return TestCase
    */
    public TestCase getTestCase() {
        
        return this.testCase;
        
    }
    
    /**  
    * @param testCase test case
    */      
    public void setTestCase(TestCase testCase) {
        
        this.testCase = testCase;
        
    }
    
    /**  
    * @return String 
    */
    public String getStatus() {
        
        return this.sStatus;
        
    }
    
    /** 
    * @param sStatus status
    */      
    public void setStatus(String sStatus) {
        
        this.sStatus = sStatus;
        
    }
    
    /**  
    * @return String 
    */
    public String getEnvironment() {
        
        return this.sEnvironment;
        
    }
    
    /** 
    * @param sEnvironment environment
    */      
    public void setEnvironment(String sEnvironment) {
        
        this.sEnvironment = sEnvironment;
        
    }    
    
    /**   
    * @return Date 
    */
    public Date getRunDate() {
        
        return this.runDate;
        
    }
    
    /**  
    * @param runDate run date
    */      
    public void setRunDate(Date runDate) {
        
        this.runDate = runDate;
        
    }
    
    /**   
    * @return long 
    */
    public long getDuration() {
        
        return this.lDuration;
        
    }
    
    /**  
    * @param lDuration duration
    */      
    public void setDuration(long lDuration) {
        
        this.lDuration = lDuration;
        
    }        
    
    /**   
    * @return String 
    */
    public String getNote() {
        
        return this.sNote;
        
    }
    
    /**  
    * @param sNote note
    */      
    public void setNote(String sNote) {
        
        this.sNote = sNote;
        
    }    
    
    /**********************************
              methods
    **********************************/     
    
    /**   
    * @return String 
    */
    @Override
    public String toString() {
        
        StringBuilder sbTestRun = new StringBuilder();
        sbTestRun.append("ID:").append(iID); 
        sbTestRun.append("|TestCase:").append(testCase.getTitle());
        sbTestRun.append("|Status:").append(sStatus);
        sbTestRun.append("|Environment:").append(sEnvironment);
        sbTestRun.append("|RunDate:").append(runDate);
        sbTestRun.append("|Duration:").append(lDuration);
        sbTestRun.append("|Note:").append(sNote);
        
        return sbTestRun.toString();
        
    }     
    
}
